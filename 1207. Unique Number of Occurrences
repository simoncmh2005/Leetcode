Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        HashMap  <Integer, Integer> Occ1 = new HashMap <Integer, Integer>();
        HashMap  <Integer, Integer> Occ2 = new HashMap <Integer, Integer>();
        for(int element:arr){
            Occ1.put(element, Occ1.getOrDefault(element, 0) + 1);
        }
        
        for(Integer element:Occ1.values()){
            Occ2.put(element, Occ2.getOrDefault(element, 0) + 1);
        }

        for(Integer element:Occ2.values()){
            if(element>=2){
                return false;
            }
        }

        return true;

    }
}
