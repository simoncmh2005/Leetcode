For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

 

Example 1:

Input: str1 = "ABCABC", str2 = "ABC"
Output: "ABC"
Example 2:

Input: str1 = "ABABAB", str2 = "ABAB"
Output: "AB"
Example 3:

Input: str1 = "LEET", str2 = "CODE"
Output: ""
 

Constraints:

1 <= str1.length, str2.length <= 1000
str1 and str2 consist of English uppercase letters.

class Solution {
    public String gcdOfStrings(String str1, String str2) {
        // Check if concatenated strings are equal or not, if not return ""
        if (!(str1 + str2).equals(str2 + str1))
            return "";
        // If strings are equal than return the substring from 0 to gcd of size(str1), size(str2)
        int gcd = function1(str1.length(), str2.length());
        return str1.substring(0, gcd);
    }

    private int function1(int a, int b) {
        return b == 0 ? a : function1(b, a % b);
    }
}

Given the input str1 = "ABABAB" and str2 = "ABAB", the expected output is "AB".

The function1 method is a recursive implementation of the Euclidean algorithm to find the GCD of two numbers. Here's the breakdown of the method:

function1(int a, int b): This method takes two integers, a and b, as input and returns their GCD.
return b == 0 ? a : function1(b, a % b): This is a recursive statement that checks if b is equal to 0. If b is 0, it means we have found the GCD, and the method returns a. Otherwise, it recursively calls function1 with the arguments b and a % b.
Now, let's trace the execution of function1 with the given example:

Initial call: function1(6, 4)
Since b is not 0, it proceeds to the recursive call function1(4, 6 % 4).
Recursive call: function1(4, 2)
Again, b is not 0, so it proceeds to another recursive call function1(2, 4 % 2).
Recursive call: function1(2, 0)
This time, b is 0, so the method returns a, which is 2.
The final return value of function1(6, 4) is 2, which represents the GCD of 6 and 4.

In the context of the given problem, the gcdOfStrings method checks if the concatenated strings str1 + str2 is equal to str2 + str1. If they are not equal, it means there is no common divisor, so the method returns an empty string. Otherwise, it calculates the GCD of the lengths of str1 and str2 using function1 (which is 2 in this case) and returns a substring of str1 from index 0 to the GCD length, giving the output "AB".
